import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö
WELCOME_MESSAGE_RU = """üëã –ü—Ä–∏–≤–µ—Ç, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–æ–≤–±–æ–π! ü§† –ì–æ—Ç–æ–≤ –ø–æ–∫–æ—Ä—è—Ç—å –ø—Ä–æ—Å—Ç–æ—Ä—ã —Å–µ—Ç–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π? 
–° Tunnel Buddy —Ç—ã –º–æ–∂–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∏ –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è –æ —Å–∫–æ—Ä–æ—Å—Ç–∏! üöÄ –ß–µ–∫–∞—Ç—å —Å–≤–æ–π eligible, –±–æ—Ä–æ–∑–¥–∏—Ç—å Rutracker –∏–ª–∏ —Å–µ—Ä—Ñ–∏—Ç—å Pornhub –±–µ–∑ –ª–æ–≥–∏–Ω–∞. –ü–ª—é—Å, –æ–Ω —Å—Ç–æ–∏—Ç –º–µ–Ω—å—à–µ, —á–µ–º —Ç–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π NFT! üí∏
–ü–æ–¥–∫–ª—é—á–∞–π —Å–≤–æ–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∑–∞–±—É–¥—å –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö, –∫–∞–∫ –æ —Å–≤–æ–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–µ—É–¥–∞—á–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏! üòÇ"""

WELCOME_MESSAGE_EN = """üëã Hey, internet cowboy! ü§† Ready to explore the web without restrictions?
With Tunnel Buddy, you can stream videos in high quality and not worry about speed! üöÄ Browse your eligible, surf Rutracker or scroll through Pornhub without logging in. Plus, it's cheaper than your last NFT! üí∏
Connect your devices and forget about blocks like your last failed crypto investment! üòÇ"""

# –Ø–∑—ã–∫–æ–≤–æ–µ –º–µ–Ω—é
def language_menu():
    keyboard = [
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data='lang_ru')],
        [InlineKeyboardButton("English", callback_data='lang_en')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞
async def start(update: Update, context):
    chat_id = update.effective_chat.id
    await context.bot.send_message(chat_id=chat_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose your language:", reply_markup=language_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def language_handler(update: Update, context):
    query = update.callback_query
    data = query.data
    await query.answer()

    if data == 'lang_ru':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é
        await context.bot.send_photo(chat_id=query.message.chat_id, photo="https://freeimage.host/i/29CFwn1")
        await context.bot.send_message(chat_id=query.message.chat_id, text=WELCOME_MESSAGE_RU, reply_markup=start_menu_ru())
    elif data == 'lang_en':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫—É—é –≤–µ—Ä—Å–∏—é
        await context.bot.send_photo(chat_id=query.message.chat_id, photo="https://freeimage.host/i/29CFwn1")
        await context.bot.send_message(chat_id=query.message.chat_id, text=WELCOME_MESSAGE_EN, reply_markup=start_menu_en())

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º
def start_menu_ru():
    keyboard = [
        [InlineKeyboardButton("–ü–æ—á–µ–º—É –ø–ª–∞—Ç–Ω—ã–π VPN –ª—É—á—à–µ?", callback_data='why_vpn')],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='choose_subscription')],
        [InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é", callback_data='instructions')],
        [InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", callback_data='download_app')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
def start_menu_en():
    keyboard = [
        [InlineKeyboardButton("Why Paid VPN is Better?", callback_data='why_vpn')],
        [InlineKeyboardButton("Choose a Subscription", callback_data='choose_subscription')],
        [InlineKeyboardButton("Connection Instructions", callback_data='instructions')],
        [InlineKeyboardButton("Download App", callback_data='download_app')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def menu_handler(update: Update, context):
    query = update.callback_query
    data = query.data
    await query.answer()

    if data == 'why_vpn':
        await context.bot.send_message(chat_id=query.message.chat_id, text="–ü–ª–∞—Ç–Ω—ã–π VPN –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: —É–ª—É—á—à–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö, –≤—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–ª–∞–º—ã.")
    elif data == 'choose_subscription':
        await context.bot.send_message(chat_id=query.message.chat_id, text="–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: 1 –º–µ—Å—è—Ü, 6 –º–µ—Å—è—Ü–µ–≤, 12 –º–µ—Å—è—Ü–µ–≤. –ö–∞–∫—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å?")
    elif data == 'instructions':
        await context.bot.send_message(chat_id=query.message.chat_id, text="–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è, —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.")
    elif data == 'download_app':
        await context.bot.send_message(chat_id=query.message.chat_id, text="–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://example.com")

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
if __name__ == '__main__':
    application = ApplicationBuilder().token('7906261755:AAHniCWm-5ybmJvFReY7iO8OJi64LvosM_I').build()

    # –ö–æ–º–∞–Ω–¥—ã –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(language_handler, pattern='^lang_'))
    application.add_handler(CallbackQueryHandler(menu_handler, pattern='^why_vpn|choose_subscription|instructions|download_app$'))

    application.run_polling()
