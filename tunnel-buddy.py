from telegram import Bot, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, InlineKeyboardButton, InlineKeyboardMarkup

# –£–≤–µ–ª–∏—á—å—Ç–µ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
bot = Bot(token="7906261755:AAHniCWm-5ybmJvFReY7iO8OJi64LvosM_I", request_timeout=30)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
app = Application.builder().token("7906261755:AAHniCWm-5ybmJvFReY7iO8OJi64LvosM_I").bot(bot).build()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("–ü–æ—á–µ–º—É –ø–ª–∞—Ç–Ω—ã–π VPN –ª—É—á—à–µ?", callback_data='why_paid')],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='choose_subscription')],
        [InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é", callback_data='setup_instructions')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–æ–≤–±–æ–π! ü§† –ì–æ—Ç–æ–≤ –ø–æ–∫–æ—Ä—è—Ç—å –ø—Ä–æ—Å—Ç–æ—Ä—ã —Å–µ—Ç–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π?\n\n"
        "–° Tunnel Buddy —Ç—ã –º–æ–∂–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∏ –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è –æ —Å–∫–æ—Ä–æ—Å—Ç–∏! üöÄ "
        "–ß–µ–∫–∞—Ç—å —Å–≤–æ–π eligible, –±–æ—Ä–æ–∑–¥–∏—Ç—å Rutracker, –∏–≥—Ä–∞—Ç—å –≤ –ø–æ–∫–µ—Ä üÉè –∏–ª–∏ —Å–µ—Ä—Ñ–∏—Ç—å Pornhub –±–µ–∑ –ª–æ–≥–∏–Ω–∞. "
        "–ü–ª—é—Å, –æ–Ω —Å—Ç–æ–∏—Ç –º–µ–Ω—å—à–µ, —á–µ–º —Ç–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π NFT! üí∏\n\n"
        "–ü–æ–¥–∫–ª—é—á–∞–π —Å–≤–æ–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∑–∞–±—É–¥—å –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö, –∫–∞–∫ –æ —Å–≤–æ–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–µ—É–¥–∞—á–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏! üòÇ",
        reply_markup=reply_markup
    )

# "–ü–æ—á–µ–º—É –ø–ª–∞—Ç–Ω—ã–π VPN –ª—É—á—à–µ?"
async def why_paid(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "ü§î **–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç–Ω—ã–π VPN?**\n\n"
        "1. üöÄ **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å** ‚Äî —Å Tunnel Buddy –≤–∞—à–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–∫–æ—Ä–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ –±—ã—Å—Ç—Ä–æ–π, –∫–∞–∫ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.\n\n"
        "2. üí∏ **–õ—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞** ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –¥–µ—à—ë–≤—ã—Ö VPN –Ω–∞ —Ä—ã–Ω–∫–µ, –Ω–æ —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.\n\n"
        "3. üì±üíªüñ•Ô∏è **–ú—É–ª—å—Ç–∏—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ** ‚Äî –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞—è –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏.\n\n"
        "4. üîê **–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –Ω–∞ 100%** ‚Äî –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏.\n\n"
        "5. üåç **–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É –º–∏—Ä—É** ‚Äî –æ–±—Ö–æ–¥–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.",
        reply_markup=reply_markup
    )

# –í—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏
async def choose_subscription(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("1 –º–µ—Å—è—Ü / 2 $USDT / 200 RUB", callback_data='pay_crypto')],
        [InlineKeyboardButton("3 –º–µ—Å—è—Ü–∞ / 5 $USDT / 500 RUB", callback_data='pay_crypto')],
        [InlineKeyboardButton("1 –≥–æ–¥ / 15 $USDT / 1500 RUB", callback_data='pay_crypto')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:", reply_markup=reply_markup)

# –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
async def pay_crypto(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π", callback_data='crypto_payment')],
        [InlineKeyboardButton("–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π", callback_data='card_payment')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='choose_subscription')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", reply_markup=reply_markup)

# –û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π
async def crypto_payment(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='pay_crypto')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üí∞ **–ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:** 0x34b46b61f1ea155de045c4b840932067c6087918\n"
        "–ü—Ä–∏–Ω–∏–º–∞–µ–º $USDT –≤ —Å–µ—Ç—è—Ö: ERC20, BSC, POLYGON, BASE, SCROLL.\n\n",
        reply_markup=reply_markup
    )

# –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π
async def card_payment(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    keyboard = [[InlineKeyboardButton("–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", callback_data='copy_card_number')],
                [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='pay_crypto')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2204320368112944\n",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
async def copy_card_number(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≤ –∫—ç—à (–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
    await query.message.reply_text("–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫—ç—à: 2204320368112944")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é
async def setup_instructions(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", callback_data='download_app')],
        [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å", callback_data='add_tunnel')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text("–ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é VPN —Ç—É–Ω–Ω–µ–ª—è:", reply_markup=reply_markup)

# –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
async def download_app(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("iPhone", url="https://itunes.apple.com/app/outline-app/id1356177741")],
        [InlineKeyboardButton("Android", url="https://play.google.com/store/apps/details?id=org.outline.android.client")],
        [InlineKeyboardButton("Windows", url="https://s3.amazonaws.com/outline-releases/client/windows/stable/Outline-Client.exe")],
        [InlineKeyboardButton("macOS", url="https://itunes.apple.com/app/outline-app/id1356178125")],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='setup_instructions')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:", reply_markup=reply_markup)

# –î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å
async def add_tunnel(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='setup_instructions')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üõ†Ô∏è **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ç—É–Ω–Ω–µ–ª—è –≤ VPN Outline:**\n\n"
        "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline.\n"
        "2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å'.\n"
        "3. –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.\n"
        "4. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'.\n"
        "5. –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º —á–µ—Ä–µ–∑ VPN Tunnel Buddy.",
        reply_markup=reply_markup
    )

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = Application.builder().token("7906261755:AAHniCWm-5ybmJvFReY7iO8OJi64LvosM_I").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(why_paid, pattern='why_paid'))
    application.add_handler(CallbackQueryHandler(choose_subscription, pattern='choose_subscription'))
    application.add_handler(CallbackQueryHandler(pay_crypto, pattern='pay_crypto'))
    application.add_handler(CallbackQueryHandler(crypto_payment, pattern='crypto_payment'))
    application.add_handler(CallbackQueryHandler(card_payment, pattern='card_payment'))
    application.add_handler(CallbackQueryHandler(copy_card_number, pattern='copy_card_number'))  # –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    application.add_handler(CallbackQueryHandler(setup_instructions, pattern='setup_instructions'))
    application.add_handler(CallbackQueryHandler(download_app, pattern='download_app'))
    application.add_handler(CallbackQueryHandler(add_tunnel, pattern='add_tunnel'))

    application.run_polling()

if __name__ == '__main__':
    main()
