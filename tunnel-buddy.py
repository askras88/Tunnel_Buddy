from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7906261755:AAHniCWm-5ybmJvFReY7iO8OJi64LvosM_I'

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("–ü–æ—á–µ–º—É –ø–ª–∞—Ç–Ω—ã–π VPN –ª—É—á—à–µ?", callback_data='why_paid_vpn')],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='choose_subscription')],
        [InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é", callback_data='instructions')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–æ–≤–±–æ–π! ü§† –ì–æ—Ç–æ–≤ –ø–æ–∫–æ—Ä—è—Ç—å –ø—Ä–æ—Å—Ç–æ—Ä—ã —Å–µ—Ç–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π? "
        "–° Tunnel Buddy —Ç—ã –º–æ–∂–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∏ –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è –æ —Å–∫–æ—Ä–æ—Å—Ç–∏! üöÄ "
        "–ß–µ–∫–∞—Ç—å —Å–≤–æ–π eligible, –±–æ—Ä–æ–∑–¥–∏—Ç—å Rutracker, –∏–≥—Ä–∞—Ç—å –≤ –ø–æ–∫–µ—Ä üÉè –∏–ª–∏ —Å–µ—Ä—Ñ–∏—Ç—å Pornhub –±–µ–∑ –ª–æ–≥–∏–Ω–∞. "
        "–ü–ª—é—Å, –æ–Ω —Å—Ç–æ–∏—Ç –º–µ–Ω—å—à–µ, —á–µ–º —Ç–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π NFT! üí∏ "
        "–ü–æ–¥–∫–ª—é—á–∞–π —Å–≤–æ–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∑–∞–±—É–¥—å –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö, –∫–∞–∫ –æ —Å–≤–æ–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–µ—É–¥–∞—á–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏! üòÇ"
    )
    
    await update.message.reply_photo(photo='https://freeimage.host/i/dp52ix4', caption=welcome_text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'why_paid_vpn':
        response_text = (
            "ü§î **–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç–Ω—ã–π VPN?**\n\n"
            "1. üöÄ **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å** ‚Äî —Å Tunnel Buddy –≤–∞—à–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–∫–æ—Ä–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ –±—ã—Å—Ç—Ä–æ–π, –∫–∞–∫ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞. –ù–∏–∫–∞–∫–∏—Ö —É—Ä–µ–∑–∞–Ω–∏–π –∏–ª–∏ –ª–∞–≥–æ–≤!\n\n"
            "2. üí∏ **–õ—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞** ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –¥–µ—à—ë–≤—ã—Ö VPN –Ω–∞ —Ä—ã–Ω–∫–µ, –Ω–æ —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏. –û—Ç–ª–∏—á–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è –Ω–∞ –∫–∞–∂–¥–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏!\n\n"
            "3. üì±üíªüñ•Ô∏è **–ú—É–ª—å—Ç–∏—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ** ‚Äî –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞—è –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏. –í—Å–µ –≥–∞–¥–∂–µ—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã –æ–¥–Ω–∏–º —â–∏—Ç–æ–º!\n\n"
            "4. üîê **–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –Ω–∞ 100%** ‚Äî –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏, –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–ª–µ–¥–∞ –≤ —Å–µ—Ç–∏. –î–∞–∂–µ –≤–∞—à –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ —É–∑–Ω–∞–µ—Ç, –≥–¥–µ –≤—ã –±—ã–ª–∏!\n\n"
            "5. üåç **–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É –º–∏—Ä—É** ‚Äî –æ–±—Ö–æ–¥–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π: –±—É–¥—å —Ç–æ —Å—Ç—Ä–∏–º–∏–Ω–≥ –≤ 4K, –ø–æ–∫–µ—Ä-—Ä—É–º—ã, –∏–ª–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–∞–π—Ç—ã!"
        )
        await query.edit_message_text(text=response_text, reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_start')]]))

    elif query.data == 'choose_subscription':
        subscription_keyboard = [
            [InlineKeyboardButton("1 –º–µ—Å—è—Ü / 2 USDT", callback_data='1_month')],
            [InlineKeyboardButton("3 –º–µ—Å—è—Ü–∞ / 5 USDT", callback_data='3_months')],
            [InlineKeyboardButton("1 –≥–æ–¥ / 15 USDT", callback_data='1_year')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_start')]
        ]
        await query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:", reply_markup=InlineKeyboardMarkup(subscription_keyboard))

    elif query.data == 'instructions':
        instruction_keyboard = [
            [InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", callback_data='download_app')],
            [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å", callback_data='add_tunnel')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_start')]
        ]
        await query.edit_message_text(text="–ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é VPN —Ç—É–Ω–Ω–µ–ª—è", reply_markup=InlineKeyboardMarkup(instruction_keyboard))

    elif query.data == 'download_app':
        device_keyboard = [
            [InlineKeyboardButton("iPhone", url="https://itunes.apple.com/app/outline-app/id1356177741")],
            [InlineKeyboardButton("Android", url="https://play.google.com/store/apps/details?id=org.outline.android.client")],
            [InlineKeyboardButton("Windows", url="https://s3.amazonaws.com/outline-releases/client/windows/stable/Outline-Client.exe")],
            [InlineKeyboardButton("macOS", url="https://itunes.apple.com/app/outline-app/id1356178125")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_instructions')]
        ]
        await query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:", reply_markup=InlineKeyboardMarkup(device_keyboard))

    elif query.data == 'add_tunnel':
        tunnel_instructions = (
            "üõ†Ô∏è **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ç—É–Ω–Ω–µ–ª—è –≤ VPN Outline:**\n\n"
            "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n\n"
            "2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å'.\n\n"
            "3. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.\n\n"
            "4. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'.\n\n"
            "5. –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ –±—ã—Å—Ç—Ä—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º."
        )
        await query.edit_message_text(text=tunnel_instructions, reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_instructions')]]))

    elif query.data in ['1_month', '3_months', '1_year']:
        payment_keyboard = [
            [InlineKeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π", callback_data='pay_with_crypto')],
            [InlineKeyboardButton("–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π", callback_data='pay_with_card')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='choose_subscription')]
        ]
        await query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", reply_markup=InlineKeyboardMarkup(payment_keyboard))

    elif query.data == 'pay_with_crypto':
        crypto_response = (
            "üí∞ **–ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:** 0x34b46b61f1ea155de045c4b840932067c6087918\n"
            "–ü—Ä–∏–Ω–∏–º–∞–µ–º $USDT –≤ —Å–µ—Ç—è—Ö: ERC20, BSC, POLYGON, BASE, SCROLL\n\n"
            "üì© –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å txid' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."
        )
        await query.edit_message_text(text=crypto_response, reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å txid", url="https://t.me/askras88")]]))

    elif query.data == 'pay_with_card':
        card_response = (
            "üí≥ **–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:** 2204320368112944\n\n"
            "üì© –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        await query.edit_message_text(text=card_response, reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫", url="https://t.me/askras88")]]))

    elif query.data == 'back_to_start':
        await start(update, context)

    elif query.data == 'back_to_instructions':
        await button(update, context)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(button))

    application.run_polling()

if __name__ == '__main__':
    main()
